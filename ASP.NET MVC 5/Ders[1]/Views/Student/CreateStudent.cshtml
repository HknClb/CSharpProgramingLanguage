@model Ders_1_.Models.Student

@{
    ViewBag.Title = "Create Student";
}

<h2>Create Student</h2>

<!-- Bir HTML form taginin başladığını belirtir. -->
@using (Html.BeginForm())
{
    /* Uygulamaları Cross-Site saldırılarına karşı korumak için tanımlanır.*/
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        <!-- Kontrollere girilen bilgilerin doğruluğunu kontrol eder ve hata varsa form üzerinden uyarı mesajı gönderir. -->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <!-- Modelin, parametrede belirtilen property'nin LabelName özelliğini tanımlar. ikinci parametrede ise bu yazının CSS'ini belirtir. -->
            @Html.LabelFor(model => model.SchoolNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- Sayfada verilerin girileceği kontrolü oluşturur. Her kontrol için otomatik doğru kontrolü oluşturur. -->
                @Html.EditorFor(model => model.SchoolNumber, new { htmlAttributes = new { @class = "form-control" } })
                <!-- Verinin kontrole girişinden sonra eğer veri istenilen formatta değilse uyarı mesajı verilir. -->
                @Html.ValidationMessageFor(model => model.SchoolNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdentityNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdentityNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentityNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SchoolTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SchoolTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SchoolTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <!-- Butona tıklandıktan sonra kayıt etme işlemini yapar. -->
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListStudents")
</div>
